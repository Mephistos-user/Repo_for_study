        /* FLEX */

/* .container {
    display: flex;
} */
/* все элементы внутри (потомки первого уровня)
контейнера будут отображаться в виде flex блоков */

/* .container {
    flex-direction:  row; - в строку
    flex-direction:  row-reverse; - в строку в обратную сторону
    flex-direction:  column; - в столбец
    flex-direction:  column-reverse; - в столбец в обратном порядке
} */

/* .container {
    justify-content: start; - (по умолчанию) сдвинуты в начало
    justify-content: end; - сдвинуты к концу
    justify-content: center; сдвинуты к центру
    justify-content: space-between; - равномерно распределенны между началом и концом
                                    первый элемент в начале, последней в конце строки
    justify-content: space-around; - равномерно распределенны между началом и концом
                                    с одинаковым пространством вокруг них и небольшим
                                    количеством свободного места на обоих концах
    justify-content: space-evenly; - элементы распределяются таким образом, чтобы
                                    чтобы расстояние между любыми двумя элементами
                                    (и расстояние до краев) было одинаковым
} */

/* .container {
    align-items: start; - в начале поперечной оси
    align-items: end; - в конце поперечной оси
    align-items: center; - центрированы по поперечной оси
    align-items: stretch; - (по умолчанию) растягиваются так, чтобы максимально заполнить контейнер
    align-items: baseline; - выровнены по их базовой линии
} */

/* .container {
    align-content: flex-start; - сдвинуты в начало контейнера
    align-content: flex-end; - сдвинуты в конец контейнера
    align-content: center; - сдвинуты к центру контейнера
    align-content: stretch; - (по умолчанию) линии растягиваются, чтобы занять 
                            все оставшеееся пространство
    align-content: space-between; - равномерно распределены; первоя строка 
                                    к началу, а последняя сдвинута к концу
    align-content: space-around; - равномерно распределены с равным пространством между
} */

/* .box {
    order: 2; - порядок элементов
} */

/* .box {
    flex-grow: 0; - (по умолчанию) все равны в пропорциях
}
.box {
    flex-grow: 1; - одна часть
}
.box:nth-child(2) {
    flex-grow: 2; - второй ребенок в 2 раза больше остальных элементов
} */
/* .item {
    flex-shrink: 2; - сжимает элемент (по умолчанию 1). Противоположно flex-grow
} */
/* .item {
    flex-basis: 100px 100px; - ширина и высота элемента до того как свободное
                                место будет распределено. Приоритетней чем
                                width и heigth
} */
/* .item {
    flex-wrap: wrap; - перенос
} */



        /* GRID */

/* .container {
    display: grid;
} */

    /* СЕТКА:
.vac-list {
    display: grid;
    grid-template-columns: 200px auto 40%; - 3 колонки
    grid-template-rows: 100px 5vw;         - 2 строки
} */
/* .vac-list {
    display: grid;
                пропорции:
    grid-template-columns: 1fr 2fr 1fr; - 3 колонки (2ая колонка в 2 раза больше 1й и 3й)
    grid-template-rows: 100px 5vw;      - 2 строки
} */
/* .vac-list {
    display: grid;
    grid-template-columns: 1fr 2fr 1fr; - 3 колонки (2ая колонка в 2 раза больше 1й и 3й)
        повторяющиеся строки:
    grid-auto-rows: 100px 15vw 15rem;   - 3 повторяющиеся строки (когда количество заранее не известно)
} */
    /* Сложная структура: */
/* .wrapper {
    display: grid;
    grid-template-columns: repeat (3, 1fr); - 3 колонки в пропорции 1 к 1
        повторяющиеся строки:
    grid-auto-rows: 100px;   - 1 повторяющаяся строка (когда количество заранее не известно)
}
.box1 {
    grid-column-start: 1;
    grid-column-end: 4;
    grid-row-start: 1;
    grid-row-end: 3;
}
.box2 {
    grid-column-start: 1;
    grid-row-start: 3;
    grid-row-end: 5;
} */

        /* Промежутки между блоками: */
/* .wrapper {
    display: grid;
    grid-template-columns: repeat (3, 1fr); - 3 колонки в пропорции 1 к 1
        промежутки:
    grid-column-gap: 10px;   - промежутки между столбцами
    grid-row-gap: 1em;       - промежутки между строками
} */


