#include <iostream>
#include <string>
#include <iomanip>
#include <cmath>//библиотека математических функций

using namespace std;

int main()
{
    //если хотим получить какую-то цифру длинного числа
    long long x = 1987654363673358;
    cout << x / 10 % 10 << endl;/*делим на число кратное 10 (10, 100, 1000 и т.д.) и применяем деление на 10 с получением остатка от деления(%),
                                  в случае получения последней цифры просто делим с остатком на 10 (%10)*/
    


    //проверка полиндрома:

    int y;
    cin >> y;
    //1331
    cout << ((y / 1000 == y % 10) && (y / 100 % 10 == y / 10 % 10)) << endl;
    
    //узнать какая по счету буква в алфавите:
    char c;
    cin >> c;
    //1331
    cout << (int)c - (int)'a' + 1 << endl;
    //a 97 1
    //b 98 2
    //c 99 3
    //d 100 4

    //преобразовать регистр первой буквы в строке на Большой:
    string name;
    cin >> name;
    //boris -> Boris
    name[0] = char((int)name[0] - (int)'a' + (int)'A');
    cout << name << endl;

     //преобразовать регистр первой буквы в строке на маленький:
    string name1;
    cin >> name1;
    //Boris -> boris
    name1[0] = char((int)name1[0] - (int)'A' + (int)'a');
    cout << name1 << endl;

    //проверка делится одно число на другое
    int a, b;
    cin >> a >> b;
        //6 3 true
        //3 6 true
        cout << ((a % b == 0) || (b % a == 0)) << endl;//первый вариант (выводит 1, если делится)
        cout << (max(a, b) % min(a, b)) << endl;//второй вариант (выводит 0 (остаток от деления), если делится

    //функции библиотеки cmath:
        float r, t;
        cin >> r >> t;
        cout << sqrt(r) <<endl;//корень квадратный
        cout << sin(r) << endl;//синус
        cout << pow(r, t) << endl;//возведение в степень

        //проверка четности (деления на 2)
        int q;
        cin >> q;
        //1001
        //0001
        cout << q % 2 << endl;//первый способ (классический с делением с остатком на 2
        cout << (q & 1)<< endl;//второй способ побитовое сложение
    
    
    
    /*x = y = z;//можно присваивать значение переменной справа по цепочке (тоже самое  x = (y = z))

    cout << x << ' ' << y << ' ' << z << ' ' << endl;



    //работа в двоичной системе (побитовые операции)
    int  a = 4, b = 7, c = 5;
    //    100,   111,   101 - 4, 7, 5 в двоичном исчислении

    cout << (a | b) << endl;// как логическое "или" только для каждого бита 1или1=1, 0или1=1, 0или1=1. Получаем 111, т.е. число 7
    cout << (a & b) << endl;// как логическое "и" только для каждого бита 1и1=1, 0и1=0, 0и1=0. Получаем 100, т.е. число 4
    cout << (a << 2) << endl;// битовый сдвиг (как умножение на 2): сдвиг на 1 добавляет один 0 справа, т.е. a = 4(100) -> сдвиг на 1 получится 1000, т.е = 8 (как при умножении на 2)
    // или как умножить число на 2 в степени равное сдвигу (т.е. если сдвиг равен 2, то а = 4*(2^2) = 16 (10000)
    cout << (b >> 2) << endl;// битовый сдвиг (как деление на 2): сдвиг на 1 убирает один 0 справа, т.е. b = 7(111) -> сдвиг на 1 получится 11, т.е = 3 
    // или как умножить число на 2 в степени равное сдвигу со знаком минус(т.е. если сдвиг равен 2, то b = 7*(2^-2) = 1 (1)
    cout << (a ^ b) << endl;// как логическое "НЕи" только для каждого бита Не1иНе1=0, Не0иНе1=1, Не0иНе1=1. Получаем 011, т.е. число 3*/
}