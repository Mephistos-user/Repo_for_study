/*KISS - Keep it short and simple
Чем проще - тем лучше
    * не придумывайте к задаче более сложного решения, чем уй требуется;
    * не имеет смысла реализовывать дополнительные функции "про запас", которые не будут использоваться вовсе или их использование крайне маловероятно;
    * не нужно подключать огромную библиотеку, если вам от нее нужна лишь пара функций;
    * декомпозируйте сложные структуры кода на простые составляющие;
    * абсолютная математическая точность или предельная детализация нужны не всегда - большинство проектов создаются не для запуска космических шаттлов.
  */  

/*// понятное, но громоздкое решение
function dayOfWeek(day) {
    let result = '';
    switch (day) {
        case 0:
            result = "Sunday";
            break;
        case 1:
        result = "Monday";
        break;
        // проверка корректности входных данных расположена в самом конце
        default:
            result = "Введите целое число от 0 до 1";
    }
    return result;
}

// понятное. но более оптимизированное решение:
function dayOfWeek1(day) {
    // проверка корректности входных данных расположена в самом начале
    if (day < 0 || day > 1) {
        return "Введите целое число от 0 до 1";
    }
    let days = [
        "Sunday",
        "Monday"
    ];
    return days[day];
}

console.log(dayOfWeek(0));
console.log(dayOfWeek1(1));*/

/*DRY - Don't repeat yourself
Не повторяйся
    * дублирование кода - пустая трата времени и ресурсов;
    * прежде чем что-либо писать, проявите прагматизм: осмотритесь;
    * слепое следование принципу DRY в коде может сильно осложнить возможность изменений.DRY
  */  

/*// страница 1
let userName = "John";
let userEmail = "john@gmail.com";

let user = [userName, userEmail];
console.log(user);

// страница 2 - нам снова понадобился юзер
// это ошибка
// let userName = "John";
// let userEmail = "john@gmail.com";

// let user = [userName, userEmail];
// console.log(user);

// корректный вариант

function getUser(name, email) {
    return [name, email];
}

console.log(getUser("John", "john@gmail.com"));
console.log(getUser("Anthony", "anthony@gmail.com"));
// мы будем повторять вызов функции,
// НО мы не будем повторять РЕАЛИЗАЦИЮ*/

/*YANGI - You aren't gonna need it
Вам это не нужно
    * возможности, которые не описаны в требованиях к системе, просто не должны реализовываться;
    * не бойся удалять лишние методы;
    * если пишете код, то будьте уверены, что он вам понадобиться;
    * не пишите код, если думаете, что он пригодится позже;
    * более строгий вариант метода KISS.*/

/*BDUF - Big design up FormDataEvent
глобальное проектирование прежде всего.
    * прежде чем переходить к реализации, убедитесь, что все хорошо продумано;
    * составив план, вы избавите себя от необходимости раз за разом начинать с нуля.
*/


