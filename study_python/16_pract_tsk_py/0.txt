Урок №16. Классы и объекты
Задание №2
Создайте класс Черепашка, который хранит позиции x и y черепашки, а также s - количество клеточек,
на которое она перемещается за ход

у этого класс есть методы:
●	go_up() - увеличивает y на s
●	go_down() - уменьшает y на s
●	go_left() - уменьшает x на s
●	go_right() - увеличивает y на s
●	evolve() - увеличивает s на 1
●	degrade() - уменьшает s на 1 или выкидывает ошибку, когда s может стать ≤ 0
●	count_moves(x2, y2) - возвращает минимальное количество действий,
    за которое черепашка сможет добраться до x2 y2 от текущей позиции

РЕШЕНИЕ:

Исходные данные:
Начальная позиция x, y
Начальная длина шага s
Конечная позиция x2, y2

Рассуждения и проблемы:
Т.к. препятствий на пути не задано логично предположить, что мы может двигатся по очереди сначала
вдоль одной оси координат, затем вдоль другой (как "конь" на шахматной доске). 
Кроме того, не сказано какие значения могут принимать x, x2, y, y2: положительные или отрицательные.
Поэтому общая длина пути по оси x будет равна delta_x = abs(x2 - x), по оси y delta_y = abs(y2 - y).
Берем по модулю, чтобы пока не учитывать направление движения. 
Начальный шаг s не может быть меньше или равен 0, но при этом может быть больше 1.
Более того s может быть больше delta_x и delta_y.
Проверяем:
Если s меньше и delta_x и delta_y; (будем увеличивать длину шага)
    Здесь дополнительно проверяем что больше delta_x или delta_y. Что меньше то и будем изначально увеличивать.
Если s больше и delta_x и delta_y; (будем уменьшать длину шага)
    Здесь дополнительно проверяем что больше delta_x или delta_y. Что больше то и будем изначально уменьшать.
Если s больше или delta_x или delta_y. (будем проверь что лучше. сначала увеличивать или уменьшать длину шага)
    Здесь дополнительно проверяем что больше delta_x или delta_y. Далее сделаем вывод:
    что лучше? сначала увеличивать то, что меньше или уменьшать то, что больше.






